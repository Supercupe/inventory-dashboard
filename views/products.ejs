<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= title %></title>
  <link rel="stylesheet" href="/css/products.css">
</head>
<body>
  <header>
    <h1><%= title %></h1>
  </header>

  <!-- Filter and Sorting Form -->
  <form action="/products" method="GET" class="filters-form">
    <div class="filters">
      <!-- Category Filter -->
      <label for="category"></label>
      <select class = "filter-option" id="category" name="category" onchange="this.form.submit()">
        <option value="">All Categories</option>
        <% categories.forEach(category => { %>
          <option value="<%= category.id %>" <%= selectedCategory == category.id ? 'selected' : '' %>><%= category.name %></option>
        <% }); %>
      </select>
    
      <!-- Supplier Filter -->
      <label for="supplier"></label>
      <select class = "filter-option" id="supplier" name="supplier" onchange="this.form.submit()">
        <option value="">All Suppliers</option>
        <% suppliers.forEach(supplier => { %>
          <option value="<%= supplier.id %>" <%= selectedSupplier == supplier.id ? 'selected' : '' %>><%= supplier.name %></option>
        <% }); %>
      </select>

      <!-- Sorting Options -->
      <label id = "sort-by" for="sort_by"></label>
      <select class = "filter-option" id="sort_by" name="sort_by" onchange="this.form.submit()">
        <option value="name" <%= sort_by == 'name' ? 'selected' : '' %>>Name</option>
        <option value="price" <%= sort_by == 'price' ? 'selected' : '' %>>Price</option>
        <option value="stock" <%= sort_by == 'stock' ? 'selected' : '' %>>Stock</option>
      </select>
      <select id="order" name="order" onchange="this.form.submit()">
        <option value="asc" <%= order == 'asc' ? 'selected' : '' %>>Ascending</option>
        <option value="desc" <%= order == 'desc' ? 'selected' : '' %>>Descending</option>
      </select>
    </div>
  </form>

  <!-- Product Table -->
  <table class="products-table">
    <thead>
      <tr>
        <th>ID</th>
        <th>Name</th>
        <th>Price</th>
        <th>Stock</th>
        <th>Actions</th>
      </tr>
    </thead>
    <tbody>
      <% products.forEach(product => { %>
        <tr>
          <td><%= product.id %></td>
          <td><%= product.name %></td>
          <td>$<%= product.price %></td>
          <td><%= product.stock %></td>
          <td>
            <div class="action-buttons">
              <button class="edit-button" data-id="<%= product.id %>">Edit</button>
              <button class="delete-button" data-id="<%= product.id %>">Delete</button>
            </div>
          </td>
        </tr>
      <% }); %>
    </tbody>
  </table>

  <!-- Add New Product Form -->
  <form action="/products" method="POST" class="add-product-form">
    <h3>Add New Product</h3>
  
    <label for="name">Product Name:</label>
    <input type="text" id="name" name="name" required>
  
    <label for="price">Price $:</label>
    <input type="number" id="price" name="price" step="0.01" required>
  
    <label for="stock">Stock:</label>
    <input type="number" id="stock" name="stock" required>
  
    <label for="category_id">Category:</label>
    <select id="category_id" name="category_id" required>
      <% categories.forEach(category => { %>
        <option value="<%= category.id %>"><%= category.name %></option>
      <% }); %>
    </select>
  
    <label for="supplier_id">Supplier:</label>
    <select id="supplier_id" name="supplier_id" required>
      <% suppliers.forEach(supplier => { %>
        <option value="<%= supplier.id %>"><%= supplier.name %></option>
      <% }); %>
    </select>
  
    <button class="btn" type="submit">Add Product</button>
  </form>

  <script>
    // Handle Delete Button
    document.querySelectorAll('.delete-button').forEach(button => {
      button.addEventListener('click', async function(event) {
        const productId = event.target.getAttribute('data-id');
        const row = event.target.closest('tr');

        if (confirm("Are you sure you want to delete this product?")) {
          try {
            const response = await fetch(`/products/${productId}`, {
              method: 'DELETE',
            });

            const data = await response.json();

            if (response.ok) {
              alert(data.message);
              row.remove(); // Remove the row from the table
            } else {
              alert(data.message);
            }
          } catch (error) {
            alert("An error occurred while deleting the product.");
            console.error(error);
          }
        }
      });
    });

    // Handle Edit Button
    document.querySelectorAll('.edit-button').forEach(button => {
      button.addEventListener('click', function() {
        const productId = this.getAttribute('data-id');
        window.location.href = `/products/edit/${productId}`;
      });
    });
  </script>
    <footer>
      <a class="btn" href="/">Back to Home</a>
    </footer>
</body>
</html>
